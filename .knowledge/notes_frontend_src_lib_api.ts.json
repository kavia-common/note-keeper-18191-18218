{"is_source_file": true, "format": "TypeScript", "description": "This file provides API client utilities for interacting with a notes backend service, including functions to list, fetch, create, update, and delete notes via REST endpoints.", "external_files": ["fetch"], "external_methods": ["fetch"], "published": ["Note", "CreateNotePayload", "UpdateNotePayload", "listNotes", "getNote", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "function url(path: string) { url", "description": "Builds a full URL from a relative API path, using environment variable or defaulting to relative path.", "scope": "", "scopeKind": ""}, {"name": "async function apiFetch<T>( apiFetch", "description": "A generic fetch wrapper that handles JSON serialization, error checking, and constructing the request URL.", "scope": "", "scopeKind": ""}, {"name": "export async function listNotes(query?: string): Promise<Note[]> { listNotes", "description": "Fetches a list of notes, optionally filtered by a search query.", "scope": "", "scopeKind": ""}, {"name": "export async function getNote(id: string): Promise<Note> { getNote", "description": "Fetches a single note by ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(payload: CreateNotePayload): Promise<Note> { createNote", "description": "Creates a new note with specified payload.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote(id: string, payload: UpdateNotePayload): Promise<Note> { updateNote", "description": "Updates an existing note identified by ID using provided payload.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: string): Promise<void> { deleteNote", "description": "Deletes a note by ID.", "scope": "", "scopeKind": ""}], "calls": ["fetch"], "search-terms": ["api.ts", "notes", "fetch", "REST endpoints", "Note", "listNotes", "getNote", "createNote", "updateNote", "deleteNote"], "state": 2, "file_id": 12, "knowledge_revision": 25, "git_revision": "", "ctags": [{"_type": "tag", "name": "API_BASE", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^const API_BASE =$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "CreateNotePayload", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^export type CreateNotePayload = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "UpdateNotePayload", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^export type UpdateNotePayload = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "apiFetch", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^async function apiFetch<T>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^export async function createNote(payload: CreateNotePayload): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^      const data = await res.json();$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^export async function deleteNote(id: string): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^export async function getNote(id: string): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^export async function listNotes(query?: string): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(u.toString(), {$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "u", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^  const u = new URL(url(path), typeof window !== \"undefined\" ? window.location.origin : \"http:\\//", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^export async function updateNote(id: string, payload: UpdateNotePayload): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-keeper-18191-18218/notes_frontend/src/lib/api.ts", "pattern": "/^function url(path: string) {$/", "language": "TypeScript", "kind": "function"}], "hash": "8c5a829e7ae5272499fec3b241ae3046", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/api.ts", "revision_history": [{"25": ""}]}